.VAR_DUMP-DEADBEEF { //to avoid accidental styling collisions
  	font-family: monospace;
  	font-size:18px;

	#var_dump { //the var dump output
		font-size: 16px;
		white-space: pre-wrap;
	  	padding-left:20px; //offsets the negative left of the +/-
		
		//elements default colors
		.prop {
			font-weight: bold;
		}

		.null {
			color: red;
		}

		.bool {
			color: purple;
		}

		.int {
			color: blue;
		}
		
		.float {
			color: orange;
		}

		.string {
			color: green;
			white-space: pre-wrap;
		}

	  	.key {
		  float:left; //so that values appear next to their keys
		}

		#root{
			margin: 0 0 0 0;
		}
		
		ul {
		  	margin-left:40px;
		  	list-style: none;
			padding: 0;
		}

		//utility
		.openClose {
		  	position:relative; //relative, so the the absolutely positioned before element can position based off it

		  	.openCloseIcon { //the span with the carrot
				position: absolute;
				top: 0;
				left: -20px;
			  	display: inline-block;
			  	cursor: pointer;
			  	transition: transform 0.3s ease;

				&.closed {
					transform: rotate(180deg);
				}
		  	}
		}

		.hide {
			display:none;
		}

		.clear {
			clear:both;
		}

		.all {
			background-color:rgba(146,116,51,.1);
			width:250px;
		}

		.closeall{
			float:right; 
		}

		.closeall:hover {
			text-decoration:underline;
			cursor:pointer
		}

		.openall:hover {
			text-decoration:underline;
			cursor:pointer;
		}
	}

	.modal { 
		max-height:80%;
		width:80%;
		position:fixed;
		box-shadow: 0px 0px 10px #888;
		top:10%;
		left:10%;
		padding:5%;
		background-color:white;
		opacity:.90;
		box-sizing:border-box;
		overflow:scroll;

	  	#header {
			height: 25px;
		  	width:100%;
		  	border-bottom: 2px solid #BC2D09;
		  	margin-bottom:10px;

		  	#expandAll,
			#collapseAll {
			  	cursor: pointer;
				padding-right:20px;
				float:left;
			}

			.closeModal  {
			  	cursor: pointer;
			  	float:right;
			}
		}
	}
}